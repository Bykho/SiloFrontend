{"ast":null,"code":"var _jsxFileName = \"/Users/nicodevelopment/Desktop/SiloFrontend/src/frontend/components/ProjectEntryPage/ProjectEntry.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport EditInPortfolio from '../EditInPortfolio';\nimport styles from './projectEntry.module.css';\nimport ProfileImage from '../ProfileImage';\nimport LayerDisplay from './LayerDisplay';\nimport { FaEdit, FaComment, FaChevronDown, FaChevronUp } from 'react-icons/fa';\nimport { useUser } from '../../contexts/UserContext';\nimport CommentSection from './CommentSection';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport config from '../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isStudentProfilePage = window.location.pathname.includes('/studentProfile'); // Adjust this condition based on your routing\n\nconst ProjectEntry = ({\n  project,\n  passedUser\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [localProject, setLocalProject] = useState(project);\n  const [localUser, setLocalUser] = useState(passedUser);\n  const {\n    user,\n    setUser\n  } = useUser();\n  const [comments, setComments] = useState(() => {\n    try {\n      return JSON.parse(JSON.stringify(project.comments));\n    } catch (e) {\n      console.error('Failed to parse comments:', e);\n      return [];\n    }\n  });\n  const [newComment, setNewComment] = useState('');\n  const updateLocalProject = (projectField, newValue) => {\n    setLocalProject(prevProject => ({\n      ...prevProject,\n      [projectField]: newValue\n    }));\n  };\n  const handleUpvote = async upvoteType => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.error('No token found in local storage');\n      return;\n    }\n    const payload = {\n      username: passedUser.username,\n      upvoteType\n    };\n    try {\n      const response = await fetch(`${config.apiBaseUrl}/upvoteProject/${project._id}`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      console.log('Response Data:', data);\n      if (response.ok) {\n        const newUpvoteId = data._id;\n\n        // Update the local project state\n        setLocalProject(prevProject => ({\n          ...prevProject,\n          [upvoteType]: [...(prevProject[upvoteType] || []), newUpvoteId]\n        }));\n\n        // Update the local user state\n        setLocalUser(prevUser => ({\n          ...prevUser,\n          [upvoteType]: [...(prevUser[upvoteType] || []), newUpvoteId]\n        }));\n\n        // Update the user context state\n        setUser(prevUser => ({\n          ...prevUser,\n          [upvoteType]: [...(prevUser[upvoteType] || []), newUpvoteId]\n        }));\n      } else {\n        console.error('Upvote failed:', data.message);\n      }\n    } catch (error) {\n      console.error('Error during upvote:', error);\n    }\n  };\n  const toggleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n  const toggleExpand = () => {\n    setIsExpanded(!isExpanded);\n  };\n  const handleCommentUpvote = index => {\n    const newComments = [...comments];\n    newComments[index].upvotes += 1;\n    setComments(newComments);\n  };\n  const handleAddComment = async commentText => {\n    if (commentText.trim() !== '') {\n      const token = localStorage.getItem('token');\n      const commentData = {\n        author: passedUser.username,\n        text: commentText,\n        projectId: localProject._id\n      };\n      try {\n        const response = await fetch(`${config.apiBaseUrl}/handleComment/${passedUser.username}`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(commentData)\n        });\n        const data = await response.json();\n        if (response.ok) {\n          const updatedComments = data.comments;\n          setComments(updatedComments);\n          setNewComment('');\n          // Update the comments in localProject\n          setLocalProject(prevProject => ({\n            ...prevProject,\n            comments: updatedComments\n          }));\n        } else {\n          console.error('Failed to add comment:', data.error);\n        }\n      } catch (error) {\n        console.error('Error during adding comment:', error);\n      }\n    }\n  };\n  const renderEditableField = projectField => {\n    return isEditing && /*#__PURE__*/_jsxDEV(EditInPortfolio, {\n      project: localProject,\n      projectField: projectField,\n      project_id: localProject._id,\n      updateProject: updateLocalProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  };\n  const renderProjectLinkButton = (link, label) => {\n    return link && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: link,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: styles.projectLinkButton,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this);\n  };\n  const findUpvoteOverlap = (upvote_field, user, localProject) => {\n    if (!Array.isArray(user[upvote_field]) || !Array.isArray(localProject[upvote_field])) {\n      return false;\n    }\n    for (let userUpvote of user[upvote_field]) {\n      for (let projectUpvote of localProject[upvote_field]) {\n        if (userUpvote === projectUpvote) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  const renderComments = () => {\n    if (!isExpanded) return null;\n    return /*#__PURE__*/_jsxDEV(CommentSection, {\n      comments: comments,\n      addComment: handleAddComment,\n      handleCommentUpvote: handleCommentUpvote,\n      user: passedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this);\n  };\n  const renderProjectDescription = () => {\n    const description = localProject.projectDescription;\n    const isLongDescription = description.length > 200;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.projectDescriptionContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.projDescription} ${isLongDescription && !isExpanded ? styles.collapsedDescription : ''}`,\n        children: [description, renderEditableField('projectDescription')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), isLongDescription && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.seeMoreButton,\n        onClick: toggleExpand,\n        children: isExpanded ? 'Less Description' : 'More Description'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.projectContainer,\n    children: [localProject.createdBy && !isStudentProfilePage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.createdByContainer,\n      children: [/*#__PURE__*/_jsxDEV(ProfileImage, {\n        username: localProject.createdBy,\n        size: \"medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `/profile/${localProject.createdBy}`,\n        children: localProject.createdBy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.projectHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: styles.projectTitle,\n        children: localProject.projectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), localProject.tags && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tagsDisplay,\n        children: localProject.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.tagStyle,\n          children: tag\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), passedUser.username === localProject.createdBy && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.editButton,\n        onClick: toggleEdit,\n        children: /*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), renderProjectDescription(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.layerDisplayContainer,\n      children: /*#__PURE__*/_jsxDEV(LayerDisplay, {\n        layers: localProject.layers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttonContainer,\n      children: [renderProjectLinkButton(localProject.githubLink, 'GitHub'), renderProjectLinkButton(localProject.projectLink, 'ReadMe')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.upvoteSectionBox,\n      children: [['impactful', 'innovative', 'interesting'].map(field => {\n        const upvoteField = `${field}_upvote`;\n        const hasOverlap = findUpvoteOverlap(upvoteField, localUser, localProject);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.upvoteButtonBox,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [field, \": \", localProject[upvoteField] ? localProject[upvoteField].length : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: hasOverlap ? styles.clickedUpvoteButton : styles.upvoteButton,\n            onClick: () => handleUpvote(upvoteField),\n            disabled: hasOverlap,\n            children: \"\\u2B06\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, field, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.commentBox,\n        children: [/*#__PURE__*/_jsxDEV(ProfileImage, {\n          username: passedUser.username,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FaComment, {\n          className: styles.commentIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.commentText,\n          children: \"Comments...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.expandButton,\n          onClick: toggleExpand,\n          children: isExpanded ? /*#__PURE__*/_jsxDEV(FaChevronUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), renderComments()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectEntry, \"dmnLMLnRE0GAga4cIGQTS2VvLWY=\", false, function () {\n  return [useUser];\n});\n_c = ProjectEntry;\nexport default ProjectEntry;\nvar _c;\n$RefreshReg$(_c, \"ProjectEntry\");","map":{"version":3,"names":["React","useState","EditInPortfolio","styles","ProfileImage","LayerDisplay","FaEdit","FaComment","FaChevronDown","FaChevronUp","useUser","CommentSection","config","jsxDEV","_jsxDEV","isStudentProfilePage","window","location","pathname","includes","ProjectEntry","project","passedUser","_s","isEditing","setIsEditing","isExpanded","setIsExpanded","localProject","setLocalProject","localUser","setLocalUser","user","setUser","comments","setComments","JSON","parse","stringify","e","console","error","newComment","setNewComment","updateLocalProject","projectField","newValue","prevProject","handleUpvote","upvoteType","token","localStorage","getItem","payload","username","response","fetch","apiBaseUrl","_id","method","headers","body","data","json","log","ok","newUpvoteId","prevUser","message","toggleEdit","toggleExpand","handleCommentUpvote","index","newComments","upvotes","handleAddComment","commentText","trim","commentData","author","text","projectId","updatedComments","renderEditableField","project_id","updateProject","fileName","_jsxFileName","lineNumber","columnNumber","renderProjectLinkButton","link","label","href","target","rel","className","projectLinkButton","children","findUpvoteOverlap","upvote_field","Array","isArray","userUpvote","projectUpvote","renderComments","addComment","renderProjectDescription","description","projectDescription","isLongDescription","length","projectDescriptionContainer","projDescription","collapsedDescription","seeMoreButton","onClick","divider","projectContainer","createdBy","createdByContainer","size","projectHeader","projectTitle","projectName","tags","tagsDisplay","map","tag","tagStyle","editButton","layerDisplayContainer","layers","buttonContainer","githubLink","projectLink","upvoteSectionBox","field","upvoteField","hasOverlap","upvoteButtonBox","clickedUpvoteButton","upvoteButton","disabled","commentBox","commentIcon","expandButton","_c","$RefreshReg$"],"sources":["/Users/nicodevelopment/Desktop/SiloFrontend/src/frontend/components/ProjectEntryPage/ProjectEntry.js"],"sourcesContent":["\n\n\nimport React, { useState } from 'react';\nimport EditInPortfolio from '../EditInPortfolio';\nimport styles from './projectEntry.module.css';\nimport ProfileImage from '../ProfileImage';\nimport LayerDisplay from './LayerDisplay';\nimport { FaEdit, FaComment, FaChevronDown, FaChevronUp } from 'react-icons/fa';\nimport { useUser } from '../../contexts/UserContext';\nimport CommentSection from './CommentSection';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport config from '../../config';\n\nconst isStudentProfilePage = window.location.pathname.includes('/studentProfile'); // Adjust this condition based on your routing\n\nconst ProjectEntry = ({ project, passedUser }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [localProject, setLocalProject] = useState(project);\n  const [localUser, setLocalUser] = useState(passedUser);\n  const { user, setUser } = useUser();\n\n  const [comments, setComments] = useState(() => {\n    try {\n      return JSON.parse(JSON.stringify(project.comments));\n    } catch (e) {\n      console.error('Failed to parse comments:', e);\n      return [];\n    }\n  });\n\n  const [newComment, setNewComment] = useState('');\n\n  const updateLocalProject = (projectField, newValue) => {\n    setLocalProject((prevProject) => ({\n      ...prevProject,\n      [projectField]: newValue,\n    }));\n  };\n\n  const handleUpvote = async (upvoteType) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.error('No token found in local storage');\n      return;\n    }\n    const payload = { username: passedUser.username, upvoteType };\n    try {\n      const response = await fetch(`${config.apiBaseUrl}/upvoteProject/${project._id}`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n      });\n      const data = await response.json();\n      console.log('Response Data:', data);\n      if (response.ok) {\n        const newUpvoteId = data._id;\n\n        // Update the local project state\n        setLocalProject((prevProject) => ({\n          ...prevProject,\n          [upvoteType]: [...(prevProject[upvoteType] || []), newUpvoteId],\n        }));\n\n        // Update the local user state\n        setLocalUser((prevUser) => ({\n          ...prevUser,\n          [upvoteType]: [...(prevUser[upvoteType] || []), newUpvoteId],\n        }));\n\n        // Update the user context state\n        setUser((prevUser) => ({\n          ...prevUser,\n          [upvoteType]: [...(prevUser[upvoteType] || []), newUpvoteId],\n        }));\n      } else {\n        console.error('Upvote failed:', data.message);\n      }\n    } catch (error) {\n      console.error('Error during upvote:', error);\n    }\n  };\n\n  const toggleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const toggleExpand = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  const handleCommentUpvote = (index) => {\n    const newComments = [...comments];\n    newComments[index].upvotes += 1;\n    setComments(newComments);\n  };\n\n  const handleAddComment = async (commentText) => {\n    if (commentText.trim() !== '') {\n      const token = localStorage.getItem('token');\n      const commentData = { author: passedUser.username, text: commentText, projectId: localProject._id };\n      try {\n        const response = await fetch(`${config.apiBaseUrl}/handleComment/${passedUser.username}`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(commentData),\n        });\n        const data = await response.json();\n        if (response.ok) {\n          const updatedComments = data.comments;\n          setComments(updatedComments);\n          setNewComment('');\n          // Update the comments in localProject\n          setLocalProject((prevProject) => ({\n            ...prevProject,\n            comments: updatedComments,\n          }));\n        } else {\n          console.error('Failed to add comment:', data.error);\n        }\n      } catch (error) {\n        console.error('Error during adding comment:', error);\n      }\n    }\n  };\n\n  const renderEditableField = (projectField) => {\n    return isEditing && (\n      <EditInPortfolio\n        project={localProject}\n        projectField={projectField}\n        project_id={localProject._id}\n        updateProject={updateLocalProject}\n      />\n    );\n  };\n\n  const renderProjectLinkButton = (link, label) => {\n    return (\n      link && (\n        <a href={link} target=\"_blank\" rel=\"noopener noreferrer\" className={styles.projectLinkButton}>\n          {label}\n        </a>\n      )\n    );\n  };\n\n  const findUpvoteOverlap = (upvote_field, user, localProject) => {\n    if (!Array.isArray(user[upvote_field]) || !Array.isArray(localProject[upvote_field])) {\n      return false;\n    }\n    for (let userUpvote of user[upvote_field]) {\n      for (let projectUpvote of localProject[upvote_field]) {\n        if (userUpvote === projectUpvote) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  const renderComments = () => {\n    if (!isExpanded) return null;\n    return (\n      <CommentSection\n        comments={comments}\n        addComment={handleAddComment}\n        handleCommentUpvote={handleCommentUpvote}\n        user={passedUser}\n      />\n    );\n  };\n\n  const renderProjectDescription = () => {\n    const description = localProject.projectDescription;\n    const isLongDescription = description.length > 200;\n\n    return (\n      <div className={styles.projectDescriptionContainer}>\n        <div className={`${styles.projDescription} ${isLongDescription && !isExpanded ? styles.collapsedDescription : ''}`}>\n          {description}\n          {renderEditableField('projectDescription')}\n        </div>\n        {isLongDescription && (\n          <button className={styles.seeMoreButton} onClick={toggleExpand}>\n            {isExpanded ? 'Less Description' : 'More Description'}\n          </button>\n        )}\n        <div className={styles.divider}></div>\n      </div>\n    );\n  };\n\n  return (\n    <div className={styles.projectContainer}>\n      {localProject.createdBy && !isStudentProfilePage && (\n        <div className={styles.createdByContainer}>\n          <ProfileImage username={localProject.createdBy} size=\"medium\" />\n          <a href={`/profile/${localProject.createdBy}`}>{localProject.createdBy}</a>\n        </div>\n      )}\n      <div className={styles.projectHeader}>\n        <h3 className={styles.projectTitle}>{localProject.projectName}</h3>\n        {localProject.tags && (\n          <div className={styles.tagsDisplay}>\n            {localProject.tags.map((tag, index) => (\n              <span key={index} className={styles.tagStyle}>{tag}</span>\n            ))}\n          </div>\n        )}\n        {passedUser.username === localProject.createdBy && (\n          <button className={styles.editButton} onClick={toggleEdit}>\n            <FaEdit />\n          </button>\n        )}\n      </div>\n      {renderProjectDescription()}\n      <div className={styles.layerDisplayContainer}>\n        <LayerDisplay layers={localProject.layers} />\n      </div>\n      <div className={styles.buttonContainer}>\n        {renderProjectLinkButton(localProject.githubLink, 'GitHub')}\n        {renderProjectLinkButton(localProject.projectLink, 'ReadMe')}\n      </div>\n      <div className={styles.upvoteSectionBox}>\n        {['impactful', 'innovative', 'interesting'].map((field) => {\n          const upvoteField = `${field}_upvote`;\n          const hasOverlap = findUpvoteOverlap(upvoteField, localUser, localProject);\n          return (\n            <div className={styles.upvoteButtonBox} key={field}>\n              <p>{field}: {localProject[upvoteField] ? localProject[upvoteField].length : 0}</p>\n              <button\n                className={hasOverlap ? styles.clickedUpvoteButton : styles.upvoteButton}\n                onClick={() => handleUpvote(upvoteField)}\n                disabled={hasOverlap}\n              >\n                &#x2B06;\n              </button>\n            </div>\n          );\n        })}\n        <div className={styles.commentBox}>\n          <ProfileImage username={passedUser.username} size=\"small\" />\n          <FaComment className={styles.commentIcon} />\n          <span className={styles.commentText}>Comments...</span>\n          <button className={styles.expandButton} onClick={toggleExpand}>\n            {isExpanded ? <FaChevronUp /> : <FaChevronDown />}\n          </button>\n        </div>\n      </div>\n      {renderComments()}\n    </div>\n  );\n};\n\nexport default ProjectEntry;\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}